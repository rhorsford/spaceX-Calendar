!function(){var e,t,n=new Date,a=n.getMonth(),d=n.getFullYear(),c=document.getElementById("year"),r=document.getElementById("month"),o=document.querySelector("#calendar > thead > tr"),l=document.querySelector("#month"),u=document.querySelector("#year"),i=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],m=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],p=["2010","2011","2012","2013","2014","2015","2016","2017","2018","2019","2020","2021"],s=document.getElementById("monthAndYear"),h=document.getElementById("next"),g=document.getElementById("previous"),v=document.getElementById("month"),E=document.getElementById("year"),f=[],y=[];function I(){d=11===a?d+1:d,L(a=(a+1)%12,d)}function T(){d=0===a?d-1:d,L(a=0===a?11:a-1,d)}function x(){d=parseInt(c.value),L(a=parseInt(r.value),d)}function L(e,t){let a=new Date(t,e).getDay();var d=document.getElementById("calendar-body"),o=y.map(e=>({date:e.launch_date_local,text:e.mission_name}));d.innerHTML="",s.innerHTML=i[e]+" "+t,c.value=t,r.value=e;let l=1;for(let c=0;c<6;c++){let r=document.createElement("tr");for(let d=0;d<7;d++)if(0===c&&d<a)u=document.createElement("td"),m=document.createTextNode(""),u.appendChild(m),r.appendChild(u);else{if(l>32-new Date(t,e,32).getDate())break;{var u=document.createElement("td"),m=document.createTextNode(l);l===n.getDate()&&t===n.getFullYear()&&e===n.getMonth()&&u.classList.add("bg-info");var p=(e+1).toString();const a=o.filter(e=>e.date.includes("0"+p));for(var h=0;h<a.length;h++){var g=a[h].date.split(/-|T/g),v=a[h].text,E=parseInt(g[2]),f=parseInt(g[1]),I=parseInt(g[0]),T=v+" ("+g[3]+")";if(E===l&&I===t&&f===e+1){u.classList.add("bg-space");var x=document.createElement("span");u.appendChild(x),x.innerText=T}}u.appendChild(m),r.appendChild(u),l++}}d.appendChild(r)}}(e=new XMLHttpRequest).onreadystatechange=function(){4==e.readyState&&200==e.status&&(y=JSON.parse(e.responseText),f.concat(y),L(a,d))},e.open("GET","https://api.spacexdata.com/v3/launches/upcoming?launch_year=2020&filter=launch_date_local,mission_name",!0),e.send(),m.forEach((function(e){var t=document.createElement("th");t.innerText=e,o.append(t)})),t=0,i.forEach((function(e){var n=document.createElement("option");n.value=t++,n.innerText=e,l.append(n)})),p.forEach((function(e){var t=document.createElement("option");t.value=e,t.innerText=e,u.append(t)})),h.addEventListener("click",I),g.addEventListener("click",T),v.addEventListener("change",x),E.addEventListener("change",x)}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
